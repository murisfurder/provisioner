---
- set_fact:
    fqdn: "{{ ansible_fqdn }}"
  when: not fqdn

- debug:
    msg: "Using {{ fqdn }} as the fqdn."

- stat:
    path: /etc/letsencrypt/live
  register: le

- set_fact: use_ssl="{{le.stat.exists}}"

- debug:
    msg: "Configuring apps to use SSL."
  when: use_ssl

- name: Install package required for htaccess
  apt:
    name: apache2-utils

- name: Create required folders
  file:
    path: "{{ item }}"
    state: directory
  with_items:
  - /etc/nginx/conf.d
  - /var/www
  - /etc/ssl/private
  - /etc/letsencrypt

- name: Create config files
  template:
    src: "{{ item }}.j2"
    dest: "/etc/nginx/conf.d/{{ item }}"
  with_items:
  - default.conf
  - ssl.inc

- name: Copies in standard config file.
  copy:
    src: default.inc
    dest: /etc/nginx/conf.d/default.inc
    force: no

- name: Copies in config tool.
  copy:
    src: provcfg.sh
    dest: /usr/local/sbin/provcfg
    mode: 0755

- name: Copies in sample index.html
  copy:
    src: index.html
    dest: /var/www/index.html
    force: no

- name: Generate DH file
  command: openssl dhparam -out /etc/ssl/private/dhparam.pem 2048 creates=/etc/ssl/private/dhparam.pem
  when: use_ssl

- name: Generate self-signed certificate as a placeholder
  command: openssl req -new -nodes -x509 -subj "/C=GB/ST=London/L=London/O=IT/CN={{ fqdn }}" -days 3650 -keyout "/etc/ssl/private/{{ fqdn }}-snakeoil.key" -out "/etc/ssl/private/{{ fqdn }}-snakeoil.crt" -extensions v3_ca creates="/etc/ssl/private/{{ fqdn }}-snakeoil.crt"
  when: use_ssl

- stat:
    path: "/etc/letsencrypt/live/{{ fqdn }}/fullchain.pem"
  register: le_ssl_fqdn_crt
  when: use_ssl

- stat:
    path: "/etc/letsencrypt/live/{{ ansible_eth0.ipv4.address }}.nip.io/fullchain.pem"
  register: le_ssl_ip_crt
  when: use_ssl

- name: Creates symlinks to certificates (FQDN)
  file:
    src: "/etc/ssl/private/{{ fqdn }}-snakeoil.crt"
    dest: "/etc/ssl/private/{{ fqdn }}.crt"
    state: link
  when: le_ssl_fqdn_crt.stat.exists == False

- name: Creates symlinks to certificates (IP)
  file:
    src: "/etc/ssl/private/{{ fqdn }}-snakeoil.crt"
    dest: "/etc/ssl/private/{{ ansible_eth0.ipv4.address }}.nip.io.crt"
    state: link
  when: le_ssl_ip_crt.stat.exists == False

- stat:
    path: "/etc/letsencrypt/live/{{ fqdn }}/privkey.pem"
  register: le_ssl_fqdn_key
  when: use_ssl

- stat:
    path: "/etc/letsencrypt/live/{{ ansible_eth0.ipv4.address }}.nip.io/privkey.pem"
  register: le_ssl_ip_key
  when: use_ssl

- name: Creates symlinks to certificates (FQDN)
  file:
    src: "/etc/ssl/private/{{ fqdn }}-snakeoil.key"
    dest: "/etc/ssl/private/{{ fqdn }}.key"
    state: link
  when: le_ssl_fqdn_key.stat.exists == False

- name: Creates symlinks to certificates (IP)
  file:
    src: "/etc/ssl/private/{{ fqdn }}-snakeoil.key"
    dest: "/etc/ssl/private/{{ ansible_eth0.ipv4.address }}.nip.io.key"
    state: link
  when: le_ssl_ip_key.stat.exists == False

- name: Nginx
  docker:
    name: nginx
    image: nginx
    state: started
    restart_policy: on-failure
    restart_policy_retry: 10
    net: provisioner
    ports:
    - "80:80"
    - "443:443"
    volumes:
    - "/etc/nginx/conf.d:/etc/nginx/conf.d:ro"
    - "/etc/ssl/private:/etc/ssl/private:ro"
    - "/var/www:/var/www:ro"
    - "/etc/letsencrypt:/etc/letsencrypt:ro"

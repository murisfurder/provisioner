# vim: tabstop=2 shiftwidth=2 softtabstop=2

include conf.d/*.upstream;

# fqdn_resolves: {{ fqdn_resolves }}

{% if fqdn_resolves == "True" %}
server {
  listen 80 default_server;
  server_tokens off;
  server_name {{ fqdn }};
  {% if use_ssl %}
  return 301 https://{{ fqdn }}$request_uri;
  {% else %}
  include conf.d/default.inc;
  {% endif %}
}
{% else %}
server {
  listen 80 default_server;
  server_tokens off;
  server_name {{ ansible_eth0.ipv4.address }}.nip.io;
  {% if use_ssl %}
  return 301 https://{{ ansible_eth0.ipv4.address }}.nip.io$request_uri;
  {% else %}
  include conf.d/default.inc;
  {% endif %}
}
{% endif %}

{% if use_ssl and fqdn_resolves == "True" %}
server {
  listen 443 ssl;
  server_name {{ fqdn }};
  server_tokens off;

  ssl_certificate /etc/ssl/private/{{ fqdn }}.crt;
  ssl_certificate_key /etc/ssl/private/{{ fqdn }}.key;

  include conf.d/ssl.inc;
  include conf.d/default.inc;

  location ~ /.well-known {
    root /var/www;
    try_files $uri $uri/ =404;
    allow all;
  }
}
{% endif %}

{% if use_ssl and fqdn_resolves == "False" %}
server {
  listen 443 ssl;
  server_name {{ ansible_eth0.ipv4.address }}.nip.io;
  server_tokens off;

  ssl_certificate /etc/ssl/private/{{ ansible_eth0.ipv4.address }}.nip.io.crt;
  ssl_certificate_key /etc/ssl/private/{{ ansible_eth0.ipv4.address }}.nip.io.key;

  include conf.d/ssl.inc;
  include conf.d/default.inc;

  location ~ /.well-known {
    root /var/www;
    try_files $uri $uri/ =404;
    allow all;
  }
}
{% endif %}
